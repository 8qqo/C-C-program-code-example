#include <iostream>
#include <string>
#include <cstdlib> // 包含 abs 函數

using namespace std;

int main() {
    string digits;
    cout << "請輸入一個純數字之字串: ";
    cin >> digits;

    int A = 0; // 奇位數的數字加總
    int B = 0; // 偶位數的數字加總

    for (int i = 0; i < digits.length(); ++i) {
        int num = digits[i] - '0'; // 將字符轉換為數字
        if ((i + 1) % 2 == 1) {
            // 奇數位數字
            A += num;
        } else {
            // 偶數位數字
            B += num;
        }
    }

    int result = abs(A - B);

    // 判斷結果是否為 11 的倍數
    if (result % 11 == 0) {
        cout << digits << " 為 11 的倍數" << endl;
    } else {
        cout << digits << " 不是 11 的倍數" << endl;
    }

    return 0;
}
-----------------------------------------------------------

讓使用者輸入一個純數字的字串。
將奇數位的數字加總，稱為 A。
將偶數位的數字加總，稱為 B。
計算 A - B 的絕對值。
判斷結果是否為 11 的倍數。
在這個過程中，我們需要考慮字串的索引從0開始，因此偶數位數字是索引為偶數的位置，而奇數位數字是索引為奇數的位置。
解釋：
string digits;：用來存儲用戶輸入的純數字字串。
A 和 B：分別用來存儲奇位數和偶位數的數字加總。
for 循環：遍歷字串中的每一個字符，將其轉換為整數並根據索引（奇偶性）加入到 A 或 B 中。
abs(A - B)：計算 A 和 B 的差的絕對值。
判斷是否為 11 的倍數：用取模運算符 % 判斷結果是否可以整除 11，如果可以，則輸出為 11 的倍數，否則輸出不是 11 的倍數。
這段程式碼將有效地執行您所描述的任務，並根據輸入的數字字串計算並判斷結果是否為 11 的倍數。請將這段程式碼複製到 DEV C++ 中，編譯並運行以驗證其正確性。





