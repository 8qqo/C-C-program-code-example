#include <iostream>
#include <vector>
#include <cmath>
#include <iomanip>

double variance(const std::vector<int>& nums) {
    double sum = 0;
    for (int i = 0; i < nums.size(); ++i) {
        sum += nums[i];
    }
    double mean = sum / nums.size();

    double sq_sum = 0;
    for (int i = 0; i < nums.size(); ++i) {
        sq_sum += (nums[i] - mean) * (nums[i] - mean);
    }
    return sq_sum / nums.size();
}

int main() {
    std::vector<int> nums;
    int N;
    std::cout << "請輸入 N 的值 (1 <= N <= 30): ";
    std::cin >> N;

    std::cout << "請輸入 " << N << " 個整數，並以空白字元隔開: ";
    for (int i = 0; i < N; ++i) {
        int num;
        std::cin >> num;
        nums.push_back(num);
    }

    double var = variance(nums);
    std::cout << std::fixed << std::setprecision(2);
    std::cout << "該 " << N << " 個整數的變異數為: " << var << std::endl;

    return 0;
}

--------------------------------------------------------------------------------------------

這個 C++ 程式的目的是計算並輸出 N 個整數的變異數。以下是該程式的主要部分的解釋：

variance 函數：這個函數接收一個整數的向量 nums，並計算這些整數的變異數。首先，它計算所有數字的總和，然後除以數字的數量來得到平均值。然後，它計算每個數字與平均值的差的平方，並將這些平方差加起來。最後，它將這個總和除以數字的數量，得到變異數。
main 函數：這個函數首先讀入一個整數 N，然後讀入 N 個整數並將它們存入一個向量 nums。然後，它呼叫 variance 函數來計算這些數字的變異數，並將結果儲存到 var 變數中。最後，它輸出這個變異數，結果會四捨五入到小數點後兩位。
這個程式使用了一些 C++ 的特性，如向量（一種動態大小的陣列）、for 迴圈、iostream（用於輸入/輸出）和 iomanip（用於設定輸出格式）等。